sanction = dataset("Zelig", "sanction")

CRRao.set_rng(StableRNG(123))
model = @fitmodel((Num ~ Target + Coop + NCost), sanction, PoissonRegression())

@test coeftable(model).cols ≈ [
    [-1.9139174143215623, 0.1577685467231638, 1.1512671677538393, -0.32405115738560536, 1.7197292626770255, 0.46390685724228237], 
    [0.26166711434426126, 0.06538218624221598, 0.056186148036696144, 0.23005500362389275, 0.10051778893154875, 0.169919917611425], 
    [-7.314321553619171, 2.413020362131846, 20.490231275543696, -1.4085812187566369, 17.108705642621505, 2.7301499657217962], 
    [2.586850179474393e-13, 0.015820935681371964, 2.631403612899401e-93, 0.15895903556066285, 1.278081590017154e-65, 0.006330552063922187], 
    [-2.4267755343748396, 0.029621816457930022, 1.0411443411718788, -0.7749506789516676, 1.5227180165655907, 0.13086993846787554], 
    [-1.4010592942682851, 0.2859152769883976, 1.2613899943357998, 0.12684836418045686, 1.9167405087884604, 0.7969437760166892]
] 
@test aic(model) ≈ 580.6738689669471
@test bic(model) ≈ 594.8141219270847

tests = [
    (
        Prior_Ridge(),
        (
            parameters = [:λ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]"), Symbol("β[4]"), Symbol("β[5]")], 
            mean = [1.3117972289518594, -1.8003018753134148, 0.13921549560681412, 1.1333503107550877, -0.32586171344968784, 1.6982906151951143, 0.40530253541953754], 
            std = [0.4894169808899057, 0.26074828115400883, 0.06558417864293224, 0.056271146891806005, 0.22813897375848846, 0.09879113419877346, 0.16884388364063263], 
            naive_se = [0.0048941698088990565, 0.002607482811540088, 0.0006558417864293225, 0.00056271146891806, 0.0022813897375848846, 0.0009879113419877345, 0.0016884388364063264], 
            mcse = [0.006593228122698112, 0.0037777409066765207, 0.0008452922578350496, 0.0007397320743930654, 0.002573270513901587, 0.0012452886387356412, 0.002280513737456902], 
            ess = [5733.982753818938, 4247.236678458876, 5949.982731917514, 5344.61005047441, 7065.444043491287, 6534.264123165731, 5330.27618714919], 
            rhat = [0.9999502614615474, 1.0000487722098845, 1.0000431234412066, 1.0003301230153148, 0.9999302799764345, 1.0000624930423005, 1.0005790603798659]
        ),
        (
            [:λ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]"), Symbol("β[4]"), Symbol("β[5]")], 
            [0.7113121034536368, -2.320183526129423, 0.011483722373516901, 1.0246468442690038, -0.792328745263636, 1.5094610317972692, 0.07550103012069273], 
            [0.9826262591734394, -1.9764376358953397, 0.09502588509898817, 1.0950407483521523, -0.4776369315096907, 1.630826812447654, 0.29295567745160667], 
            [1.2040028857886247, -1.7971453419945247, 0.13987209346518276, 1.1330621014792968, -0.3204537217723162, 1.6976588188141055, 0.40682877861128086], 
            [1.5097526189530002, -1.622947192426617, 0.1825075609045261, 1.171221273051076, -0.17028081475496962, 1.7644591068999373, 0.5189706676304453], 
            [2.5619628524277958, -1.3002811950337343, 0.2689630347996906, 1.2451061669018157, 0.10222020865277942, 1.8935569539599897, 0.7330767322541916]
        )
    ),
    (
        Prior_Laplace(),
        (
            parameters = [:λ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]"), Symbol("β[4]"), Symbol("β[5]")], 
            mean = [1.1035718328093627, -1.7911566968350432, 0.13603506420486264, 1.1324286836895685, -0.2964665548592543, 1.7010382852721724, 0.39284381759677656], 
            std = [0.5676071096847863, 0.262498653212143, 0.06490948768273125, 0.0561247087395064, 0.22335802316012227, 0.1012092384423664, 0.17298934207137542], 
            naive_se = [0.005676071096847863, 0.00262498653212143, 0.0006490948768273125, 0.0005612470873950641, 0.0022335802316012228, 0.0010120923844236642, 0.0017298934207137543], 
            mcse = [0.008554281572821645, 0.004052793381641462, 0.000843711640113367, 0.0007662540663120977, 0.0026802953359192205, 0.0012742195887250503, 0.0021397310917044094], 
            ess = [5101.985609574815, 4611.239750843727, 6345.121995970426, 6267.634688456171, 7304.098436339963, 7420.306117331988, 6264.698347000442], 
            rhat = [1.0003044971489798, 1.0001775161466888, 0.999903014993257, 1.000572310094153, 1.0000610485501824, 0.9999114544297293, 0.9999296818298076]
        ),
        (
            [:λ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]"), Symbol("β[4]"), Symbol("β[5]")], 
            [0.4543717747355564, -2.312980967918297, 0.009290812017015261, 1.0241474026485495, -0.7542143307468072, 1.50290740691697, 0.05809030616645747], 
            [0.7382941099624859, -1.9683972690225728, 0.09240724891899244, 1.0942716307941125, -0.44369182319445044, 1.6331331735122574, 0.2740118352657453], 
            [0.9619652911035116, -1.78622210675237, 0.13536974843549748, 1.131258686927056, -0.28894855470379677, 1.6994216186743103, 0.3945625210024579], 
            [1.3049286837559477, -1.6133330986261543, 0.1800654452342082, 1.1698289377445699, -0.1370073828904405, 1.7690029584027824, 0.5112540895073898], 
            [2.586885606343078, -1.2837657489702463, 0.2626675696012748, 1.244780318655339, 0.11320833086933825, 1.9002116196813539, 0.7308607706748619]
        )
    ),
    (
        Prior_Cauchy(),
        (
            parameters = [:λ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]"), Symbol("β[4]"), Symbol("β[5]")], 
            mean = [0.8558332789695785, -1.7983977878937403, 0.138256556795528, 1.1322114462338804, -0.29275778633649563, 1.7039781739841644, 0.39448682539304325], 
            std = [0.4619755164518355, 0.26219357916419644, 0.06487985109720593, 0.057255877998499516, 0.21689036716150165, 0.09743530296758854, 0.16727173330298067], 
            naive_se = [0.004619755164518355, 0.0026219357916419644, 0.0006487985109720593, 0.0005725587799849951, 0.0021689036716150164, 0.0009743530296758854, 0.0016727173330298069], 
            mcse = [0.004980845945910398, 0.0037867331555877636, 0.0007930116560779635, 0.0008385778363330738, 0.002530376868975019, 0.0011271597404490595, 0.002285402840640787], 
            ess = [7120.235808601627, 4736.527680437566, 6989.337225987095, 5442.318073993593, 6830.714613172968, 6738.467965981896, 5730.995685749637], 
            rhat = [0.9999098689264254, 0.9999282904371856, 1.000060821856771, 0.9999001080206844, 0.9999549783294126, 0.9999101580913704, 0.9999038575294762]
        ),
        (
            [:λ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]"), Symbol("β[4]"), Symbol("β[5]")], 
            [0.29267033769783307, -2.312539845052916, 0.011239613087659122, 1.0198173308097631, -0.7403452597003637, 1.5134870909681353, 0.06774154919630708], 
            [0.5424323955275557, -1.9749126710045024, 0.09501290790922068, 1.093682110904588, -0.43509973715495454, 1.6383882310222273, 0.2822787955422599], 
            [0.7551152554304412, -1.795680375608736, 0.13656158410736727, 1.1315284515890465, -0.28867696569140494, 1.705319454054063, 0.3951856397951312], 
            [1.050356099467026, -1.6219595789430896, 0.18126791638033568, 1.1708553795530212, -0.1397977572686393, 1.7703821416112562, 0.5066352755351771], 
            [1.9963540678202651, -1.2893383310863251, 0.2676626151246309, 1.2456779585738391, 0.10579058795286705, 1.892635812486403, 0.7253345901860517]
        )
    ),
    (
        Prior_TDist(),
        (
            parameters = [:λ, :ν, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]"), Symbol("β[4]"), Symbol("β[5]")], 
            mean = [0.9886942581032249, 3.0837291444857082, -1.8065296804369115, 0.13993142382111437, 1.1339243840096234, -0.30968480838340146, 1.7026196538904514, 0.40253147249906496],
            std = [0.4187363079920741, 7.996300784775614, 0.26479172301477394, 0.06564494431487575, 0.05648886959440701, 0.22081473022302314, 0.09995747157581854, 0.1700636677900144],
            naive_se = [0.004187363079920741, 0.07996300784775613, 0.0026479172301477395, 0.0006564494431487575, 0.0005648886959440701, 0.0022081473022302314, 0.0009995747157581854, 0.0017006366779001437],
            mcse = [0.004583275302718809, 0.11397472806012052, 0.004190915242201387, 0.0008514187503677647, 0.0008593206399050397, 0.0028999838780798368, 0.0012127507034353081, 0.0024141487315178117],
            ess = [6943.432992777387, 4422.804323336391, 3384.5427783756672, 5242.044851460251, 4397.961148301642, 5930.888754581016, 5706.312931461051, 4239.828782242413],
            rhat = [1.00006291168768, 1.00003413046404, 0.9999397970486843, 1.0000883226125885, 1.0003767815188556, 0.9999649212423989, 0.9999000011405574, 0.9999253075301576]
        ),
        (
            [:λ, :ν, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]"), Symbol("β[4]"), Symbol("β[5]")],
            [0.40236647286765215, 0.5755322036765177, -2.338308570861697, 0.011634856963755928, 1.0255417982598392, -0.7635324059551749, 1.511245704286045, 0.06804561814298477],
            [0.7019566015669841, 1.1693157667820828, -1.9842911210594856, 0.09524910469113765, 1.0952534555242865, -0.451768947820736, 1.6333869740626703, 0.2863896685049991],
            [0.9159369326272728, 1.8159685851567973, -1.8023855706336336, 0.139202757560455, 1.133084716031569, -0.3017262654837807, 1.7023140067858236, 0.4016305647539477],
            [1.188915358141256, 3.073711509856273, -1.6222284479167681, 0.1836089270172917, 1.1717395977820373, -0.15589477776952965, 1.7700221629370714, 0.5173718866731722],
            [2.0150621260623454, 12.779974170614135, -1.3154698057273944, 0.27036786529196416, 1.2463933704949608, 0.10052601697992151, 1.9025494844269446, 0.739531199132326]
        )
    ),
    (
        Prior_Uniform(),
        (
            parameters = [:λ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]"), Symbol("β[4]"), Symbol("β[5]")],
            mean = [6.875082585502397, 0.27918019892160884, 0.27918019892160884, 0.27918019892160884, 0.2791243628818245, 0.27918019892160884, -0.27918019892160884],
            std = [14.290850343718235, 1.998501371892128e-15, 1.998501371892128e-15, 1.998501371892128e-15, 0.0055836039784322436, 1.998501371892128e-15, 1.998501371892128e-15],
            naive_se = [0.14290850343718237, 1.998501371892128e-17, 1.998501371892128e-17, 1.998501371892128e-17, 5.5836039784322435e-5, 1.998501371892128e-17, 1.998501371892128e-17],
            mcse = [0.9914658984816714, 0.0, 0.0, 0.0, 5.583603978432232e-5, 0.0, 0.0], ess = [139.5154382596647, 20.552977468197152, 20.552977468197152, 20.552977468197152, 10004.0032022416, 20.552977468197152, 20.552977468197152],
            rhat = [0.999967736593228, 0.9998999949995, 0.9998999949995, 0.9998999949995, 1.0, 0.9998999949995, 0.9998999949995]
        ),
        (
            [:λ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]"), Symbol("β[4]"), Symbol("β[5]")],
            [0.6280438731933357, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, -0.27918019892161083],
            [1.3665799555295828, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, -0.27918019892161083],
            [2.640114326203344, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, -0.27918019892161083],
            [6.303816881891564, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, -0.27918019892161083],
            [39.3119221563284, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, 0.27918019892161083, -0.27918019892161083]
        )
    )
]

for (prior,test_summaries,test_quantiles) in tests
    CRRao.set_rng(StableRNG(123))
    model = @fitmodel((Num ~ Target + Coop + NCost), sanction, PoissonRegression(), prior)
    
    #Split summaries and quantiles into symbols and numbers for testing equality/approximate equality. 
    model_summaries, model_quantiles = describe(model.chain)
    (model_summaries_symbols, model_summaries_nums...) = model_summaries.nt
    (model_quantiles_symbols, model_quantiles_nums...) = model_quantiles.nt
    (test_summaries_symbols, test_summaries_nums...) = test_summaries
    (test_quantiles_symbols, test_quantiles_nums...) = test_quantiles

    @test model_summaries_symbols == test_summaries_symbols
    for i in 1:length(test_summaries_nums)
        @test model_summaries_nums[i] ≈ test_summaries_nums[i]
    end
    @test model_quantiles_symbols == test_quantiles_symbols
    for i in 1:length(test_quantiles_nums)
        @test model_quantiles_nums[i] ≈ test_quantiles_nums[i]
    end
end