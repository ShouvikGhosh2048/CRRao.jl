mtcars = dataset("datasets", "mtcars")

@testset "OLS" begin
    CRRao.set_rng(StableRNG(123))
    model = @fitmodel((MPG ~ HP + WT + Gear), mtcars, LinearRegression())

    @test model.fit.cols ≈ [
        [32.01365679074491, -0.03678605889338903, -3.1978106240485467, 1.0199808687184484], 
        [4.632264086003881, 0.009891461620298145, 0.8465458699304196, 0.8514083837234175], 
        [6.9110172037626985, -3.7189709979666525, -3.7774806276136994, 1.1979925124272586], 
        [1.6383852102488675e-7, 0.0008879421680332547, 0.0007605933136019097, 0.2409627017003867], 
        [22.524893954292942, -0.05704779951920132, -4.931881229871286, -0.7240501450849461], 
        [41.50241962719688, -0.016524318267576752, -1.4637400182258071, 2.764011882521843]
    ]

    @test model.sigma ≈ 2.5741691724978977
    @test model.LogLike ≈ -73.52638935960971
    @test model.AIC ≈ 157.05277871921942
    @test model.BIC ≈ 164.38145823321804
    @test model.R_sqr ≈ 0.8352309600685555
    @test model.Adjusted_R_sqr ≈ 0.8175771343616149

    @test model.fittedResponse ≈ [
        23.668849952338718, 22.85340824320634, 
        25.253556140740894, 20.746171762311384, 
        17.635570543830177, 20.14663845388644, 
        14.644831040166633, 23.61182872351372, 
        22.525801204993822, 20.568426475004856,
        20.568426475004856, 15.437019556212643, 
        16.52427516838915, 16.364384637186724, 
        10.743951547500636, 9.819671909982297, 
        9.520508065881298, 26.630517005748224, 
        29.016241045324072, 27.83450394241933, 
        23.622748495961854, 18.299397166241015, 
        18.57121106928514, 13.781422171673526, 
        16.340457241090512, 27.47793682112109,
        26.922715039574857, 28.11844900519874, 
        17.264981908248554, 21.818065399379595,
        13.374047477198516, 23.193986311384343
    ]

    @test model.residuals ≈ [
        -2.668849952338718, -1.8534082432063386, 
        -2.4535561407408935, 0.6538282376886144, 
        1.0644294561698224, -2.0466384538864375, 
        -0.3448310401666319, 0.7881712764862776, 
        0.2741987950061784, -1.3684264750048563, 
        -2.768426475004855, 0.9629804437873553, 
        0.7757248316108516, -1.1643846371867248, 
        -0.3439515475006356, 0.5803280900177032, 
        5.179491934118701, 5.769482994251774, 
        1.3837589546759261, 6.065496057580667, 
        -2.1227484959618543, -2.7993971662410146, 
        -3.371211069285142, -0.4814221716735254, 
        2.8595427589094875, -0.1779368211210901, 
        -0.9227150395748573, 2.2815509948012576, 
        -1.4649819082485536, -2.1180653993795957, 
        1.6259525228014837, -1.7939863113843444
    ]

    @test model.Cooks_distance ≈ [
        0.013342034282302797, 0.006887282667312196, 
        0.015495847517059158, 0.0014309089637597762,
        0.00447197921392359, 0.014588985833725162, 
        0.0015401004198819339, 0.005826402580871438, 
        0.0003074315682458216, 0.007011803724485459, 
        0.028698077402054694, 0.0025984983592199293, 
        0.0018259935015465612, 0.003961518883315901, 
        0.0014122489772288866, 0.004961031834940678, 
        0.3111039446698831, 0.11872557592945515, 
        0.01267921344874388, 0.18027152389575862,
        0.03551409534596339, 0.02132188661223607, 
        0.033303982249972226, 0.002076825609693457, 
        0.022039704192128574, 0.0001378106083285506, 
        0.006862929526074501, 0.04703889945177856, 
        0.03812045131808726, 0.03540469459036061, 
        0.1371534135504359, 0.00614566032951969
    ]
end

@testset "Priors" begin
    tests = [
        (
            Prior_Ridge(),
            (parameters = [:v, :σ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]")], mean = [6.909712644776552, 2.6726094111082688, 28.686617912311178, -0.039534257287233185, -2.705639225818733, 1.591162338539628], std = [3.779330371695293, 0.38776639359010884, 5.4204763471548905, 0.010635154550917817, 0.9635050797674868, 0.9825107127230825], naive_se = [0.03779330371695293, 0.0038776639359010883, 0.05420476347154891, 0.00010635154550917817, 0.009635050797674868, 0.009825107127230826], mcse = [0.06087309170064763, 0.00609254345802582, 0.11057209105535612, 0.00015275387354797882, 0.017589532454805545, 0.019828545119116598], ess = [3848.1625991408673, 3787.1472416245683, 2431.530376555189, 4057.7267485700904, 2897.623004454553, 2538.054826881086], rhat = [0.99990002215523, 0.999968854445911, 1.0001290397330218, 0.9999333024273593, 1.000054278866056, 1.0000681823906061]),
            ([:v, :σ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]")], [2.5200308046471234, 2.0518510184800562, 17.603419947586804, -0.061151881292449056, -4.516344038435958, -0.2204750509380125], [4.501359459070388, 2.4030266499883957, 25.26234531120696, -0.04637157548890951, -3.344282581659076, 0.9158040706515994], [6.039690457772275, 2.629744260462105, 28.922899550805262, -0.039267964863226576, -2.7384810526211636, 1.5519641303956502], [8.238213050450698, 2.8942335196927464, 32.335961001159546, -0.03250962951472595, -2.104068213831705, 2.202805390554196], [16.62198110518631, 3.548183645845648, 38.73425506342391, -0.01912991814931216, -0.7210813215190509, 3.6201660170073753])
        ),
        (
            Prior_Laplace(),
            (parameters = [:v, :σ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]")], mean = [4.221345324511645, 2.6713167928392902, 29.052311550040276, -0.039753975221587176, -2.716136842217452, 1.5128836545552982], std = [3.0652507071134814, 0.3828964621057206, 5.258946666730437, 0.01064629672000607, 0.9506417119531662, 0.9530337271128602], naive_se = [0.030652507071134812, 0.003828964621057206, 0.05258946666730437, 0.0001064629672000607, 0.009506417119531662, 0.009530337271128602], mcse = [0.0505525342124406, 0.006793342285916675, 0.10319952482912687, 0.000172093321990423, 0.01824619730062317, 0.01797785139589567], ess = [3799.421070033664, 3782.530687914963, 3144.5863839069916, 4429.647108721699, 3299.1828372083282, 3383.709577569072], rhat = [0.9999363198347544, 1.0000989481401368, 1.0003659040604447, 1.00047504099668, 1.0008822501790835, 1.0002108504167702]),
            ([:v, :σ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]")], [1.2437873544139264, 2.0691638311416827, 17.805587665344394, -0.06140350187630703, -4.55585046297978, -0.2789517899778435], [2.37883045573142, 2.401643771674853, 25.800125132690425, -0.04664335093469242, -3.3384484233025047, 0.8793931544081637], [3.4110249206303824, 2.622621662871624, 29.28655986862489, -0.03950449633834527, -2.7407364073391127, 1.4690911078660251], [5.113830670043022, 2.8897428873329796, 32.53847405895425, -0.03258953048458116, -2.120355225709556, 2.109221351381947], [11.742312246219342, 3.560184912163643, 38.88891209308056, -0.01941224339731591, -0.7253524456559105, 3.5245319303197196])
        ),
        (
            Prior_Cauchy(),
            (parameters = [:σ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]")], mean = [2.592782972312659, 30.122531651219365, -0.039677444773338434, -2.8084587232312836, 1.3061252767939713], std = [0.34169216383582446, 4.698617782007479, 0.010047681150228414, 0.8659685833837769, 0.8565819594505977], naive_se = [0.0034169216383582446, 0.04698617782007479, 0.00010047681150228414, 0.008659685833837768, 0.008565819594505976], mcse = [0.005302447860509053, 0.08387029922384089, 0.0001612373741568577, 0.01515533711276815, 0.015161337648252431], ess = [4054.143798128163, 2718.5026909290677, 4004.223110511278, 2891.9734877796873, 2906.010030624341], rhat = [1.000010690441468, 0.9999000585335126, 0.9999146771883107, 0.9999550171322062, 0.9999255166935217]),
            ([:σ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]")], [2.0162281900009416, 20.505645331671136, -0.05994221775780337, -4.5044584532846885, -0.34011138676218994], [2.3499911311745816, 27.145010892088365, -0.0460342161389992, -3.3759697030773657, 0.7345607860847316], [2.5597313653250784, 30.22617945624394, -0.03950207306596249, -2.822687948080653, 1.2909880743242668], [2.803153727926486, 33.246351222608155, -0.03303981328925928, -2.2373706103783606, 1.8556848280304727], [3.3556365329802205, 39.065228300459744, -0.020177985750382415, -1.1062055202813632, 3.03740323355194])
        ),
        (
            Prior_TDist(),
            (parameters = [:ν, :σ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]")], mean = [1.0537927197320296, 2.6251153503785916, 30.185910999928367, -0.03956902754568413, -2.809871850158947, 1.2856352340636978], std = [0.5576059855550115, 0.35588266938374363, 4.793452565539881, 0.010250147097396656, 0.8772477930805094, 0.869882378051403], naive_se = [0.0055760598555501155, 0.003558826693837437, 0.04793452565539881, 0.00010250147097396656, 0.008772477930805095, 0.00869882378051403], mcse = [0.014312936185163161, 0.00428768871470856, 0.06052036097490612, 0.00012568064378143772, 0.011369978948785622, 0.010567827652695242], ess = [1340.7091300933566, 6374.031216211277, 5361.725702693245, 5835.995921965089, 5301.003295951282, 5752.163971050322], rhat = [0.9999231396157179, 0.999940190805317, 1.0006203743248667, 1.000272055480836, 1.0009786529738922, 1.000279266468955]),
            ([:ν, :σ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]")], [0.36699618780538135, 2.0326805314018332, 20.481575301819916, -0.0598664455643371, -4.492351303091096, -0.3642433259302875], [0.6600384146309358, 2.375803025050149, 27.068488879529532, -0.04640238038321162, -3.3901574753312524, 0.7021156695544545], [0.9300898424038898, 2.588476159495655, 30.27868744475205, -0.03956746416463863, -2.8249904633076826, 1.264172172496013], [1.2960992994202327, 2.8441554039206505, 33.448113149933874, -0.032618178617300604, -2.2351205221514387, 1.8397343793707777], [2.4820521830868754, 3.439301222624831, 39.346229756522796, -0.01978634532504938, -1.025663667656199, 3.0849479886365563])
        ),
        (
            Prior_Uniform(),
            (parameters = [:ν, :σ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]")], mean = [1.7692376266299186e16, 1.018332362557015e7, -50.40693451764794, -56.19755409865889, -6598.2303227266475, -2.4977829318378023e6], std = [2.7593132768785795e6, 0.00042202441178654395, 1.0892122472074706e-10, 1.2893786153266696e-10, 7.185367421359359e-11, 2.421559775016096e-8], naive_se = [27593.132768785796, 4.2202441178654395e-6, 1.0892122472074706e-12, 1.2893786153266693e-12, 7.18536742135936e-13, 2.421559775016096e-10], mcse = [276273.6593381799, 4.054318790265397e-5, 1.08751141534799e-11, 1.2893012680225053e-11, 0.0, 0.0], ess = [20.664906906539503, 25.440481162080992, 21.308020633504995, 20.59580046671935, 20.552977468197156, 20.552977468197156], rhat = [2.1086470012965157, 1.2813262863520782, 1.5250846783340974, 2.230068306387876, 0.9998999949995, 0.9998999949995]),
            ([:ν, :σ, :α, Symbol("β[1]"), Symbol("β[2]"), Symbol("β[3]")], [1.7692376260588496e16, 1.018332362482424e7, -50.4069345178081, -56.19755409887478, -6598.230322726719, -2.4977829318378265e6], [1.7692376264433838e16, 1.0183323625272773e7, -50.40693451772802, -56.1975540987667, -6598.230322726719, -2.4977829318378265e6], [1.7692376266605322e16, 1.0183323625517203e7, -50.40693451767629, -56.19755409865851, -6598.230322726719, -2.4977829318378265e6], [1.7692376268407842e16, 1.0183323625871625e7, -50.40693451759222, -56.197554098550256, -6598.230322726719, -2.4977829318378265e6], [1.7692376270993146e16, 1.0183323626487846e7, -50.406934517393694, -56.19755409841493, -6598.230322726719, -2.4977829318378265e6])
        ),
    ]

    for (prior,test_summaries,test_quantiles) in tests
        CRRao.set_rng(StableRNG(123))
        model = @fitmodel((MPG ~ HP + WT + Gear), mtcars, LinearRegression(), prior)

        #Split summaries and quantiles into symbols and numbers for testing equality/approximate equality. 
        (model_summaries_symbols, model_summaries_nums...) = model.summaries.nt
        (model_quantiles_symbols, model_quantiles_nums...) = model.quantiles.nt
        (test_summaries_symbols, test_summaries_nums...) = test_summaries
        (test_quantiles_symbols, test_quantiles_nums...) = test_quantiles

        @test model_summaries_symbols == test_summaries_symbols
        for i in 1:length(test_summaries_nums)
            @test model_summaries_nums[i] ≈ test_summaries_nums[i]
        end
        @test model_quantiles_symbols == test_quantiles_symbols
        for i in 1:length(test_quantiles_nums)
            @test model_quantiles_nums[i] ≈ test_quantiles_nums[i]
        end
    end
end